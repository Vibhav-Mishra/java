Why String is immutable in java and what is the difference between String and String Builder? And Write some
of the methods of String class at least 5 with example.

Sol : -
String is immutable in java because of security which java provides and the concept of string literal
suppose there are 5 references variables, all refers to one object "vibhav". if one reference 
variable changes the value of the object, it will be affected to all the reference variables.

Difference between String and String Builder are -: 

STRING BUILDER -:
- Mutable
- Fast as compared to string
- can be concat
 Dynamic in nature
 less memory consuming
 
 STRING -:
 immutable
 slow
 stored in string Pool
 not used in threaded environment
 cannot modify or concat
 
Some of the methods of String class with example are as follows -:
1. toUpperCase() and toLowerCase()


public class Stringoperation1
{
public static void main(String ar[])
{
String s = "Vibhav";
System.out.println(s.toUpperCase());   //VIBHAV
System.out.println(s.toLowerCase());  /vibhav
System.out.println(s);  //Vibhav (no change)
}
}

 
2. startsWith() and endsWith()

public class Stringoperation2
{
public static void main(String ar[])
{
String s="Vibhav";
 System.out.println(s.startsWith("Vi"));   //true
 System.out.println(s.endsWith(v));
}
}



3. charAt()

public class Stringoperation3
{
public static void main(String ar[])
{
String s="Vibhav";
 System.out.println(s.charAt(0));   //V
 System.out.println(s.charAt(3));   //h
}
}


4. length()

public class Stringoperation4
{
public static void main(String ar[])
{
String s="Vibhav";
 System.out.println(s.length());   //6
}
}


5. replace()

public class Stringoperation5
{
public static void main(String ar[])
{
String s1 = "java is a programming lang";
 String replaceString = s1.replace("Java","Python")   //replacing java with python
 System.out.println(replaceString);
}
}
